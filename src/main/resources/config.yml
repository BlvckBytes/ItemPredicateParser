# ____________                ________            _____________             _____     ________
#   ____  _/_  /____________ ______  __ \_________________  /__(_)___________ __  /________  __ \_____ ___________________________
#   __  / _  __/  _ \_  __ `__ \_  /_/ /_  ___/  _ \  __  /__  /_  ___/  __ `/  __/  _ \_  /_/ /  __ `/_  ___/_  ___/  _ \_  ___/
#   __/ /  / /_ /  __/  / / / / /  ____/_  /   /  __/ /_/ / _  / / /__ / /_/ // /_ /  __/  ____// /_/ /_  /   _(__  )/  __/  /
#   /___/  \__/ \___//_/ /_/ /_//_/     /_/    \___/\__,_/  /_/  \___/ \__,_/ \__/ \___//_/     \__,_/ /_/    /____/ \___//_/
#
# ItemPredicateParser - Developed by BlvckBytes <blvckbytes@gmail.com>
# Repository - https://github.com/BlvckBytes/ItemPredicateParser
# ASCII-Art - https://patorjk.com/software/taag/#p=display&f=Speed

# - command_representation: String
expandedPreview$: '"&a" & command_representation'
# 𱍊 is a really high UTF-16 character, so it should always be sorted last by the client
# - excess_count: Int
maxCompletionsExceeded$: '"𱍊 and " & excess_count & " more"'
inputNonHighlightPrefix: "&c"
inputHighlightPrefix: "&4"
# highlighted_input: String
parseConflicts$:
  EXPECTED_CORRECT_INTEGER: '"&cExpected a non-malformed integer: " & highlighted_input'
  TOO_MANY_TIME_NOTATION_BLOCKS: '"&cDo not use more than 3 colon-separated blocks: " & highlighted_input'
  EXPECTED_FOLLOWING_INTEGER: '"&cThis predicate requires an integer argument: " & highlighted_input'
  EXPECTED_SEARCH_PATTERN: '"&cExpected a name to search for: " & highlighted_input'
  NO_SEARCH_MATCH: '"&cFound no matches: " & highlighted_input'
  MISSING_STRING_TERMINATION: '"&cString has not been terminated: " & highlighted_input'
  MULTIPLE_SEARCH_PATTERN_WILDCARDS: '"&cUsed multiple ? within one argument: " & highlighted_input'
  ONLY_SEARCH_PATTERN_WILDCARD: '"&cCannot search just for a wildcard: " & highlighted_input'
  DOES_NOT_ACCEPT_TIME_NOTATION: '"&cThis argument does not accept time notation: " & highlighted_input'
  DOES_NOT_ACCEPT_NON_EQUALS_COMPARISON: '"&cThis argument does not accept comparison notation: " & highlighted_input'
  EXPECTED_EXPRESSION_AFTER_OPERATOR: '"&cThis operator has to to be followed up by another expression: " & highlighted_input'
  EXPECTED_OPENING_PARENTHESIS: '"&cExpected a opening parenthesis: " & highlighted_input'
  EXPECTED_CLOSING_PARENTHESIS: '"&cExpected a closing parenthesis: " & highlighted_input'
  EMPTY_OR_BLANK_QUOTED_STRING: '"&cStrings are not allowed to be blank: " & highlighted_input'
  EXPECTED_LEFT_HAND_SIDE: '"&cExpected a left-hand-side expression: " & highlighted_input'

playerMessages:
  commandOnlyForPlayers$: 'lut["MESSAGE_PREFIX"] & "&cThis command is only available to players"'
  emptyPredicate$: 'lut["MESSAGE_PREFIX"] & "&cPlease provide a non-empty predicate."'
  pluginReloadedSuccess$: 'lut["MESSAGE_PREFIX"] & "&7The plugin has been &ereloaded &7successfully."'
  pluginReloadedError$: 'lut["MESSAGE_PREFIX"] & "&cAn error occurred while trying to reload the plugin. Check the console!"'
  # - label: String
  # - actions: Collection<String>
  usageIppCommandAction$: 'lut["MESSAGE_PREFIX"] & "&7Usage: /" & label & " <" & iter_cat(actions, (action) => "&e" & action, "&7, ") & "&7>"'
  # - label: String
  # - action: String
  # - languages: Collection<String>
  usageIppTestCommandLanguage$: 'lut["MESSAGE_PREFIX"] & "&7Usage: /" & label & " " & action & " <" & iter_cat(languages, (language) => "&e" & language, "&7, ") & "&7>"'
  # - entered_predicate: String
  # - expanded_predicate: String
  # - expanded_failure: String?
  predicateTestResult$:
    - '"&8&m                &8[&6ItemPredicateParser&8]&m                "'
    - '"&8> &7Entered predicate: &e" & entered_predicate'
    - '"&8> &7Expanded predicate: &e" & expanded_predicate'
    - '"&8> &7Result: " & if expanded_failure == null then "&aMatching Hand" else "&cMismatching Hand: &4" & expanded_failure'
    - '"&8&m                &8[&6ItemPredicateParser&8]&m                "'
  # - exception_message: String
  predicateParseError$: 'lut["MESSAGE_PREFIX"] & exception_message'
  missingPermissionIppCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou don''t have the permission to use the ipp command."'
  missingPermissionIppTestCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou don''t have the permission to use the test sub-command."'
  missingPermissionIppReloadCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou don''t have the permission to use the reload sub-command."'

# File-global lookup table
lut:
  MESSAGE_PREFIX: '&7[&6ItemPredicateParser&7] '
